{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/lucas/OneDrive/Desktop/ws/Imobi-exspress-res/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"C:/Users/lucas/OneDrive/Desktop/ws/Imobi-exspress-res/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _wrapAsyncGenerator from \"C:/Users/lucas/OneDrive/Desktop/ws/Imobi-exspress-res/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _awaitAsyncGenerator from \"C:/Users/lucas/OneDrive/Desktop/ws/Imobi-exspress-res/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _asyncGeneratorDelegate from \"C:/Users/lucas/OneDrive/Desktop/ws/Imobi-exspress-res/node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js\";\nimport _asyncIterator from \"C:/Users/lucas/OneDrive/Desktop/ws/Imobi-exspress-res/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nexport var streamChunk = /*#__PURE__*/_regeneratorRuntime().mark(function streamChunk(chunk, chunkSize) {\n  var len, pos, end;\n  return _regeneratorRuntime().wrap(function streamChunk$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          len = chunk.byteLength;\n\n          if (!(!chunkSize || len < chunkSize)) {\n            _context.next = 5;\n            break;\n          }\n\n          _context.next = 4;\n          return chunk;\n\n        case 4:\n          return _context.abrupt(\"return\");\n\n        case 5:\n          pos = 0;\n\n        case 6:\n          if (!(pos < len)) {\n            _context.next = 13;\n            break;\n          }\n\n          end = pos + chunkSize;\n          _context.next = 10;\n          return chunk.slice(pos, end);\n\n        case 10:\n          pos = end;\n          _context.next = 6;\n          break;\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, streamChunk);\n});\nexport var readBytes = /*#__PURE__*/function () {\n  var _ref = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(iterable, chunkSize) {\n    var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, chunk;\n\n    return _regeneratorRuntime().wrap(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _iteratorAbruptCompletion = false;\n            _didIteratorError = false;\n            _context2.prev = 2;\n            _iterator = _asyncIterator(readStream(iterable));\n\n          case 4:\n            _context2.next = 6;\n            return _awaitAsyncGenerator(_iterator.next());\n\n          case 6:\n            if (!(_iteratorAbruptCompletion = !(_step = _context2.sent).done)) {\n              _context2.next = 12;\n              break;\n            }\n\n            chunk = _step.value;\n            return _context2.delegateYield(_asyncGeneratorDelegate(_asyncIterator(streamChunk(chunk, chunkSize)), _awaitAsyncGenerator), \"t0\", 9);\n\n          case 9:\n            _iteratorAbruptCompletion = false;\n            _context2.next = 4;\n            break;\n\n          case 12:\n            _context2.next = 18;\n            break;\n\n          case 14:\n            _context2.prev = 14;\n            _context2.t1 = _context2[\"catch\"](2);\n            _didIteratorError = true;\n            _iteratorError = _context2.t1;\n\n          case 18:\n            _context2.prev = 18;\n            _context2.prev = 19;\n\n            if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n              _context2.next = 23;\n              break;\n            }\n\n            _context2.next = 23;\n            return _awaitAsyncGenerator(_iterator.return());\n\n          case 23:\n            _context2.prev = 23;\n\n            if (!_didIteratorError) {\n              _context2.next = 26;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 26:\n            return _context2.finish(23);\n\n          case 27:\n            return _context2.finish(18);\n\n          case 28:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee, null, [[2, 14, 18, 28], [19,, 23, 27]]);\n  }));\n\n  return function readBytes(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar readStream = /*#__PURE__*/function () {\n  var _ref2 = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(stream) {\n    var reader, _yield$_awaitAsyncGen, done, value;\n\n    return _regeneratorRuntime().wrap(function _callee2$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!stream[Symbol.asyncIterator]) {\n              _context3.next = 3;\n              break;\n            }\n\n            return _context3.delegateYield(_asyncGeneratorDelegate(_asyncIterator(stream), _awaitAsyncGenerator), \"t0\", 2);\n\n          case 2:\n            return _context3.abrupt(\"return\");\n\n          case 3:\n            reader = stream.getReader();\n            _context3.prev = 4;\n\n          case 5:\n            _context3.next = 7;\n            return _awaitAsyncGenerator(reader.read());\n\n          case 7:\n            _yield$_awaitAsyncGen = _context3.sent;\n            done = _yield$_awaitAsyncGen.done;\n            value = _yield$_awaitAsyncGen.value;\n\n            if (!done) {\n              _context3.next = 12;\n              break;\n            }\n\n            return _context3.abrupt(\"break\", 16);\n\n          case 12:\n            _context3.next = 14;\n            return value;\n\n          case 14:\n            _context3.next = 5;\n            break;\n\n          case 16:\n            _context3.prev = 16;\n            _context3.next = 19;\n            return _awaitAsyncGenerator(reader.cancel());\n\n          case 19:\n            return _context3.finish(16);\n\n          case 20:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee2, null, [[4,, 16, 20]]);\n  }));\n\n  return function readStream(_x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport var trackStream = function trackStream(stream, chunkSize, onProgress, onFinish) {\n  var iterator = readBytes(stream, chunkSize);\n  var bytes = 0;\n  var done;\n\n  var _onFinish = function _onFinish(e) {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  };\n\n  return new ReadableStream({\n    pull: function pull(controller) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _yield$iterator$next, _done, value, len, loadedBytes;\n\n        return _regeneratorRuntime().wrap(function _callee3$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return iterator.next();\n\n              case 3:\n                _yield$iterator$next = _context4.sent;\n                _done = _yield$iterator$next.done;\n                value = _yield$iterator$next.value;\n\n                if (!_done) {\n                  _context4.next = 10;\n                  break;\n                }\n\n                _onFinish();\n\n                controller.close();\n                return _context4.abrupt(\"return\");\n\n              case 10:\n                len = value.byteLength;\n\n                if (onProgress) {\n                  loadedBytes = bytes += len;\n                  onProgress(loadedBytes);\n                }\n\n                controller.enqueue(new Uint8Array(value));\n                _context4.next = 19;\n                break;\n\n              case 15:\n                _context4.prev = 15;\n                _context4.t0 = _context4[\"catch\"](0);\n\n                _onFinish(_context4.t0);\n\n                throw _context4.t0;\n\n              case 19:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee3, null, [[0, 15]]);\n      }))();\n    },\n    cancel: function cancel(reason) {\n      _onFinish(reason);\n\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  });\n};","map":{"version":3,"names":["streamChunk","chunk","chunkSize","len","byteLength","pos","end","slice","readBytes","iterable","readStream","stream","Symbol","asyncIterator","reader","getReader","read","done","value","cancel","trackStream","onProgress","onFinish","iterator","bytes","_onFinish","e","ReadableStream","pull","controller","next","close","loadedBytes","enqueue","Uint8Array","reason","return","highWaterMark"],"sources":["C:/Users/lucas/OneDrive/Desktop/ws/Imobi-exspress-res/node_modules/axios/lib/helpers/trackStream.js"],"sourcesContent":["\nexport const streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nexport const readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n}\n\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {done, value} = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n}\n\nexport const trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  }\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}